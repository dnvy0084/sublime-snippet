{
	"scope": "source.js",
	"completions":
	[
		{ "trigger": "glMatrix.setMatrixArrayType", "contents": "glMatrix.setMatrixArrayType( ${1:type} )" },
		{ "trigger": "glMatrix.toRadian", "contents": "glMatrix.toRadian( ${1:a} )" },
		{ "trigger": "vec2.create", "contents": "vec2.create()" },
		{ "trigger": "vec2.clone", "contents": "vec2.clone( ${1:a} )" },
		{ "trigger": "vec2.fromValues", "contents": "vec2.fromValues( ${1:x}, ${2:y} )" },
		{ "trigger": "vec2.copy", "contents": "vec2.copy( ${1:out}, ${2:a} )" },
		{ "trigger": "vec2.set", "contents": "vec2.set( ${1:out}, ${2:x}, ${3:y} )" },
		{ "trigger": "vec2.add", "contents": "vec2.add( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec2.subtract", "contents": "vec2.subtract( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec2.multiply", "contents": "vec2.multiply( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec2.divide", "contents": "vec2.divide( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec2.min", "contents": "vec2.min( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec2.max", "contents": "vec2.max( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec2.scale", "contents": "vec2.scale( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec2.scaleAndAdd", "contents": "vec2.scaleAndAdd( ${1:out}, ${2:a}, ${3:b}, ${4:scale} )" },
		{ "trigger": "vec2.distance", "contents": "vec2.distance( ${1:a}, ${2:b} )" },
		{ "trigger": "vec2.squaredDistance", "contents": "vec2.squaredDistance( ${1:a}, ${2:b} )" },
		{ "trigger": "vec2.negate", "contents": "vec2.negate( ${1:out}, ${2:a} )" },
		{ "trigger": "vec2.inverse", "contents": "vec2.inverse( ${1:out}, ${2:a} )" },
		{ "trigger": "vec2.normalize", "contents": "vec2.normalize( ${1:out}, ${2:a} )" },
		{ "trigger": "vec2.cross", "contents": "vec2.cross( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec2.transformMat2", "contents": "vec2.transformMat2( ${1:out}, ${2:a}, ${3:m} )" },
		{ "trigger": "vec2.transformMat2d", "contents": "vec2.transformMat2d( ${1:out}, ${2:a}, ${3:m} )" },
		{ "trigger": "vec2.transformMat3", "contents": "vec2.transformMat3( ${1:out}, ${2:a}, ${3:m} )" },
		{ "trigger": "vec2.transformMat4", "contents": "vec2.transformMat4( ${1:out}, ${2:a}, ${3:m} )" },
		{ "trigger": "vec3.create", "contents": "vec3.create()" },
		{ "trigger": "vec3.clone", "contents": "vec3.clone( ${1:a} )" },
		{ "trigger": "vec3.fromValues", "contents": "vec3.fromValues( ${1:x}, ${2:y}, ${3:z} )" },
		{ "trigger": "vec3.copy", "contents": "vec3.copy( ${1:out}, ${2:a} )" },
		{ "trigger": "vec3.set", "contents": "vec3.set( ${1:out}, ${2:x}, ${3:y}, ${4:z} )" },
		{ "trigger": "vec3.add", "contents": "vec3.add( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec3.subtract", "contents": "vec3.subtract( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec3.multiply", "contents": "vec3.multiply( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec3.divide", "contents": "vec3.divide( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec3.min", "contents": "vec3.min( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec3.max", "contents": "vec3.max( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec3.scale", "contents": "vec3.scale( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec3.scaleAndAdd", "contents": "vec3.scaleAndAdd( ${1:out}, ${2:a}, ${3:b}, ${4:scale} )" },
		{ "trigger": "vec3.distance", "contents": "vec3.distance( ${1:a}, ${2:b} )" },
		{ "trigger": "vec3.squaredDistance", "contents": "vec3.squaredDistance( ${1:a}, ${2:b} )" },
		{ "trigger": "vec3.negate", "contents": "vec3.negate( ${1:out}, ${2:a} )" },
		{ "trigger": "vec3.inverse", "contents": "vec3.inverse( ${1:out}, ${2:a} )" },
		{ "trigger": "vec3.normalize", "contents": "vec3.normalize( ${1:out}, ${2:a} )" },
		{ "trigger": "vec3.cross", "contents": "vec3.cross( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec3.transformMat4", "contents": "vec3.transformMat4( ${1:out}, ${2:a}, ${3:m} )" },
		{ "trigger": "vec3.transformMat3", "contents": "vec3.transformMat3( ${1:out}, ${2:a}, ${3:m} )" },
		{ "trigger": "vec3.transformQuat", "contents": "vec3.transformQuat( ${1:out}, ${2:a}, ${3:q} )" },
		{ "trigger": "vec3.rotateX", "contents": "vec3.rotateX( ${1:out}, ${2:a}, ${3:b}, ${4:c} )" },
		{ "trigger": "vec3.rotateY", "contents": "vec3.rotateY( ${1:out}, ${2:a}, ${3:b}, ${4:c} )" },
		{ "trigger": "vec3.rotateZ", "contents": "vec3.rotateZ( ${1:out}, ${2:a}, ${3:b}, ${4:c} )" },
		{ "trigger": "vec4.create", "contents": "vec4.create()" },
		{ "trigger": "vec4.clone", "contents": "vec4.clone( ${1:a} )" },
		{ "trigger": "vec4.fromValues", "contents": "vec4.fromValues( ${1:x}, ${2:y}, ${3:z}, ${4:w} )" },
		{ "trigger": "vec4.copy", "contents": "vec4.copy( ${1:out}, ${2:a} )" },
		{ "trigger": "vec4.set", "contents": "vec4.set( ${1:out}, ${2:x}, ${3:y}, ${4:z}, ${5:w} )" },
		{ "trigger": "vec4.add", "contents": "vec4.add( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec4.subtract", "contents": "vec4.subtract( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec4.multiply", "contents": "vec4.multiply( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec4.divide", "contents": "vec4.divide( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec4.min", "contents": "vec4.min( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec4.max", "contents": "vec4.max( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec4.scale", "contents": "vec4.scale( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "vec4.scaleAndAdd", "contents": "vec4.scaleAndAdd( ${1:out}, ${2:a}, ${3:b}, ${4:scale} )" },
		{ "trigger": "vec4.distance", "contents": "vec4.distance( ${1:a}, ${2:b} )" },
		{ "trigger": "vec4.squaredDistance", "contents": "vec4.squaredDistance( ${1:a}, ${2:b} )" },
		{ "trigger": "vec4.negate", "contents": "vec4.negate( ${1:out}, ${2:a} )" },
		{ "trigger": "vec4.inverse", "contents": "vec4.inverse( ${1:out}, ${2:a} )" },
		{ "trigger": "vec4.normalize", "contents": "vec4.normalize( ${1:out}, ${2:a} )" },
		{ "trigger": "vec4.transformMat4", "contents": "vec4.transformMat4( ${1:out}, ${2:a}, ${3:m} )" },
		{ "trigger": "vec4.transformQuat", "contents": "vec4.transformQuat( ${1:out}, ${2:a}, ${3:q} )" },
		{ "trigger": "mat2.create", "contents": "mat2.create()" },
		{ "trigger": "mat2.clone", "contents": "mat2.clone( ${1:a} )" },
		{ "trigger": "mat2.copy", "contents": "mat2.copy( ${1:out}, ${2:a} )" },
		{ "trigger": "mat2.identity", "contents": "mat2.identity( ${1:out} )" },
		{ "trigger": "mat2.transpose", "contents": "mat2.transpose( ${1:out}, ${2:a} )" },
		{ "trigger": "mat2.invert", "contents": "mat2.invert( ${1:out}, ${2:a} )" },
		{ "trigger": "mat2.adjoint", "contents": "mat2.adjoint( ${1:out}, ${2:a} )" },
		{ "trigger": "mat2.scale", "contents": "mat2.scale( ${1:out}, ${2:a}, ${3:v} )" },
		{ "trigger": "mat2d.create", "contents": "mat2d.create()" },
		{ "trigger": "mat2d.clone", "contents": "mat2d.clone( ${1:a} )" },
		{ "trigger": "mat2d.copy", "contents": "mat2d.copy( ${1:out}, ${2:a} )" },
		{ "trigger": "mat2d.identity", "contents": "mat2d.identity( ${1:out} )" },
		{ "trigger": "mat2d.invert", "contents": "mat2d.invert( ${1:out}, ${2:a} )" },
		{ "trigger": "mat2d.scale", "contents": "mat2d.scale( ${1:out}, ${2:a}, ${3:v} )" },
		{ "trigger": "mat2d.translate", "contents": "mat2d.translate( ${1:out}, ${2:a}, ${3:v} )" },
		{ "trigger": "mat3.create", "contents": "mat3.create()" },
		{ "trigger": "mat3.fromMat4", "contents": "mat3.fromMat4( ${1:out}, ${2:a} )" },
		{ "trigger": "mat3.clone", "contents": "mat3.clone( ${1:a} )" },
		{ "trigger": "mat3.copy", "contents": "mat3.copy( ${1:out}, ${2:a} )" },
		{ "trigger": "mat3.identity", "contents": "mat3.identity( ${1:out} )" },
		{ "trigger": "mat3.transpose", "contents": "mat3.transpose( ${1:out}, ${2:a} )" },
		{ "trigger": "mat3.invert", "contents": "mat3.invert( ${1:out}, ${2:a} )" },
		{ "trigger": "mat3.adjoint", "contents": "mat3.adjoint( ${1:out}, ${2:a} )" },
		{ "trigger": "mat3.translate", "contents": "mat3.translate( ${1:out}, ${2:a}, ${3:v} )" },
		{ "trigger": "mat3.scale", "contents": "mat3.scale( ${1:out}, ${2:a}, ${3:v} )" },
		{ "trigger": "mat3.fromMat2d", "contents": "mat3.fromMat2d( ${1:out}, ${2:a} )" },
		{ "trigger": "mat4.create", "contents": "mat4.create()" },
		{ "trigger": "mat4.clone", "contents": "mat4.clone( ${1:a} )" },
		{ "trigger": "mat4.copy", "contents": "mat4.copy( ${1:out}, ${2:a} )" },
		{ "trigger": "mat4.identity", "contents": "mat4.identity( ${1:out} )" },
		{ "trigger": "mat4.translate", "contents": "mat4.translate( ${1:out}, ${2:a}, ${3:v} )" },
		{ "trigger": "mat4.transpose", "contents": "mat4.transpose( ${1:out}, ${2:a} )" },
		{ "trigger": "mat4.invert", "contents": "mat4.invert( ${1:out}, ${2:a} )" },
		{ "trigger": "mat4.adjoint", "contents": "mat4.adjoint( ${1:out}, ${2:a} )" },
		{ "trigger": "mat4.scale", "contents": "mat4.scale( ${1:out}, ${2:a}, ${3:v} )" },
		{ "trigger": "mat4.determinant", "contents": "mat4.determinant( ${1:a} )" },
		{ "trigger": "mat4.multiply", "contents": "mat4.multiply( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "mat4.rotate", "contents": "mat4.rotate( ${1:out}, ${2:a}, ${3:rad}, ${4:axis} )" },
		{ "trigger": "mat4.rotateX", "contents": "mat4.rotateX( ${1:out}, ${2:a}, ${3:rad} )" },
		{ "trigger": "mat4.rotateY", "contents": "mat4.rotateY( ${1:out}, ${2:a}, ${3:rad} )" },
		{ "trigger": "mat4.rotateZ", "contents": "mat4.rotateZ( ${1:out}, ${2:a}, ${3:rad} )" },
		{ "trigger": "quat.create", "contents": "quat.create()" },
		{ "trigger": "quat.identity", "contents": "quat.identity( ${1:out} )" },
		{ "trigger": "quat.setAxisAngle", "contents": "quat.setAxisAngle( ${1:out}, ${2:axis}, ${3:rad} )" },
		{ "trigger": "quat.multiply", "contents": "quat.multiply( ${1:out}, ${2:a}, ${3:b} )" },
		{ "trigger": "quat.invert", "contents": "quat.invert( ${1:out}, ${2:a} )" },
		{ "trigger": "quat.fromMat3", "contents": "quat.fromMat3( ${1:out}, ${2:m} )" }
	]
}